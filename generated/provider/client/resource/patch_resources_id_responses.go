package resource

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/validate"

	strfmt "github.com/go-openapi/strfmt"
)

// PatchResourcesIDReader is a Reader for the PatchResourcesID structure.
type PatchResourcesIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PatchResourcesIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPatchResourcesIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 202:
		result := NewPatchResourcesIDAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 204:
		result := NewPatchResourcesIDNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewPatchResourcesIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewPatchResourcesIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewPatchResourcesIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewPatchResourcesIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPatchResourcesIDOK creates a PatchResourcesIDOK with default headers values
func NewPatchResourcesIDOK() *PatchResourcesIDOK {
	return &PatchResourcesIDOK{}
}

/*PatchResourcesIDOK handles this case with default header values.

The plan has been changed successfully. The corresponding message
is to be displayed to the user on the Manifold dashboard.

*/
type PatchResourcesIDOK struct {
	Payload PatchResourcesIDOKBody
}

func (o *PatchResourcesIDOK) Error() string {
	return fmt.Sprintf("[PATCH /resources/{id}][%d] patchResourcesIdOK  %+v", 200, o.Payload)
}

func (o *PatchResourcesIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchResourcesIDAccepted creates a PatchResourcesIDAccepted with default headers values
func NewPatchResourcesIDAccepted() *PatchResourcesIDAccepted {
	return &PatchResourcesIDAccepted{}
}

/*PatchResourcesIDAccepted handles this case with default header values.

Acknowledgement of the plan change request with a corresponding
message to be displayed to the user. The provider will call the
callback url once resource's plan has been changed successfully or
a failure has occurred.

*/
type PatchResourcesIDAccepted struct {
	Payload PatchResourcesIDAcceptedBody
}

func (o *PatchResourcesIDAccepted) Error() string {
	return fmt.Sprintf("[PATCH /resources/{id}][%d] patchResourcesIdAccepted  %+v", 202, o.Payload)
}

func (o *PatchResourcesIDAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchResourcesIDNoContent creates a PatchResourcesIDNoContent with default headers values
func NewPatchResourcesIDNoContent() *PatchResourcesIDNoContent {
	return &PatchResourcesIDNoContent{}
}

/*PatchResourcesIDNoContent handles this case with default header values.

The plan has been changed successfully and there is no message to
display to the user.

*/
type PatchResourcesIDNoContent struct {
}

func (o *PatchResourcesIDNoContent) Error() string {
	return fmt.Sprintf("[PATCH /resources/{id}][%d] patchResourcesIdNoContent ", 204)
}

func (o *PatchResourcesIDNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPatchResourcesIDBadRequest creates a PatchResourcesIDBadRequest with default headers values
func NewPatchResourcesIDBadRequest() *PatchResourcesIDBadRequest {
	return &PatchResourcesIDBadRequest{}
}

/*PatchResourcesIDBadRequest handles this case with default header values.

Request denied due to invalid request body.
*/
type PatchResourcesIDBadRequest struct {
	Payload PatchResourcesIDBadRequestBody
}

func (o *PatchResourcesIDBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /resources/{id}][%d] patchResourcesIdBadRequest  %+v", 400, o.Payload)
}

func (o *PatchResourcesIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchResourcesIDUnauthorized creates a PatchResourcesIDUnauthorized with default headers values
func NewPatchResourcesIDUnauthorized() *PatchResourcesIDUnauthorized {
	return &PatchResourcesIDUnauthorized{}
}

/*PatchResourcesIDUnauthorized handles this case with default header values.

Request authenticity could not be validated.
*/
type PatchResourcesIDUnauthorized struct {
	Payload PatchResourcesIDUnauthorizedBody
}

func (o *PatchResourcesIDUnauthorized) Error() string {
	return fmt.Sprintf("[PATCH /resources/{id}][%d] patchResourcesIdUnauthorized  %+v", 401, o.Payload)
}

func (o *PatchResourcesIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchResourcesIDNotFound creates a PatchResourcesIDNotFound with default headers values
func NewPatchResourcesIDNotFound() *PatchResourcesIDNotFound {
	return &PatchResourcesIDNotFound{}
}

/*PatchResourcesIDNotFound handles this case with default header values.

Requested entity could not be found.
*/
type PatchResourcesIDNotFound struct {
	Payload PatchResourcesIDNotFoundBody
}

func (o *PatchResourcesIDNotFound) Error() string {
	return fmt.Sprintf("[PATCH /resources/{id}][%d] patchResourcesIdNotFound  %+v", 404, o.Payload)
}

func (o *PatchResourcesIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchResourcesIDInternalServerError creates a PatchResourcesIDInternalServerError with default headers values
func NewPatchResourcesIDInternalServerError() *PatchResourcesIDInternalServerError {
	return &PatchResourcesIDInternalServerError{}
}

/*PatchResourcesIDInternalServerError handles this case with default header values.

Request failed due to an internal server error.
*/
type PatchResourcesIDInternalServerError struct {
	Payload PatchResourcesIDInternalServerErrorBody
}

func (o *PatchResourcesIDInternalServerError) Error() string {
	return fmt.Sprintf("[PATCH /resources/{id}][%d] patchResourcesIdInternalServerError  %+v", 500, o.Payload)
}

func (o *PatchResourcesIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*PatchResourcesIDAcceptedBody Object used to display a message back to the user after a change has been
// made to a Resource.
//
swagger:model PatchResourcesIDAcceptedBody
*/
type PatchResourcesIDAcceptedBody struct {

	// message
	// Required: true
	// Max Length: 256
	// Min Length: 3
	Message *string `json:"message"`
}

// Validate validates this patch resources ID accepted body
func (o *PatchResourcesIDAcceptedBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateMessage(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PatchResourcesIDAcceptedBody) validateMessage(formats strfmt.Registry) error {

	if err := validate.Required("patchResourcesIdAccepted"+"."+"message", "body", o.Message); err != nil {
		return err
	}

	if err := validate.MinLength("patchResourcesIdAccepted"+"."+"message", "body", string(*o.Message), 3); err != nil {
		return err
	}

	if err := validate.MaxLength("patchResourcesIdAccepted"+"."+"message", "body", string(*o.Message), 256); err != nil {
		return err
	}

	return nil
}

/*PatchResourcesIDBadRequestBody patch resources ID bad request body
swagger:model PatchResourcesIDBadRequestBody
*/
type PatchResourcesIDBadRequestBody struct {

	// message
	// Required: true
	// Max Length: 256
	// Min Length: 3
	Message *string `json:"message"`
}

// Validate validates this patch resources ID bad request body
func (o *PatchResourcesIDBadRequestBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateMessage(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PatchResourcesIDBadRequestBody) validateMessage(formats strfmt.Registry) error {

	if err := validate.Required("patchResourcesIdBadRequest"+"."+"message", "body", o.Message); err != nil {
		return err
	}

	if err := validate.MinLength("patchResourcesIdBadRequest"+"."+"message", "body", string(*o.Message), 3); err != nil {
		return err
	}

	if err := validate.MaxLength("patchResourcesIdBadRequest"+"."+"message", "body", string(*o.Message), 256); err != nil {
		return err
	}

	return nil
}

/*PatchResourcesIDInternalServerErrorBody patch resources ID internal server error body
swagger:model PatchResourcesIDInternalServerErrorBody
*/
type PatchResourcesIDInternalServerErrorBody struct {

	// message
	// Required: true
	// Max Length: 256
	// Min Length: 3
	Message *string `json:"message"`
}

// Validate validates this patch resources ID internal server error body
func (o *PatchResourcesIDInternalServerErrorBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateMessage(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PatchResourcesIDInternalServerErrorBody) validateMessage(formats strfmt.Registry) error {

	if err := validate.Required("patchResourcesIdInternalServerError"+"."+"message", "body", o.Message); err != nil {
		return err
	}

	if err := validate.MinLength("patchResourcesIdInternalServerError"+"."+"message", "body", string(*o.Message), 3); err != nil {
		return err
	}

	if err := validate.MaxLength("patchResourcesIdInternalServerError"+"."+"message", "body", string(*o.Message), 256); err != nil {
		return err
	}

	return nil
}

/*PatchResourcesIDNotFoundBody patch resources ID not found body
swagger:model PatchResourcesIDNotFoundBody
*/
type PatchResourcesIDNotFoundBody struct {

	// message
	// Required: true
	// Max Length: 256
	// Min Length: 3
	Message *string `json:"message"`
}

// Validate validates this patch resources ID not found body
func (o *PatchResourcesIDNotFoundBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateMessage(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PatchResourcesIDNotFoundBody) validateMessage(formats strfmt.Registry) error {

	if err := validate.Required("patchResourcesIdNotFound"+"."+"message", "body", o.Message); err != nil {
		return err
	}

	if err := validate.MinLength("patchResourcesIdNotFound"+"."+"message", "body", string(*o.Message), 3); err != nil {
		return err
	}

	if err := validate.MaxLength("patchResourcesIdNotFound"+"."+"message", "body", string(*o.Message), 256); err != nil {
		return err
	}

	return nil
}

/*PatchResourcesIDOKBody Object used to display a message back to the user after a change has been
// made to a Resource.
//
swagger:model PatchResourcesIDOKBody
*/
type PatchResourcesIDOKBody struct {

	// message
	// Required: true
	// Max Length: 256
	// Min Length: 3
	Message *string `json:"message"`
}

// Validate validates this patch resources ID o k body
func (o *PatchResourcesIDOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateMessage(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PatchResourcesIDOKBody) validateMessage(formats strfmt.Registry) error {

	if err := validate.Required("patchResourcesIdOK"+"."+"message", "body", o.Message); err != nil {
		return err
	}

	if err := validate.MinLength("patchResourcesIdOK"+"."+"message", "body", string(*o.Message), 3); err != nil {
		return err
	}

	if err := validate.MaxLength("patchResourcesIdOK"+"."+"message", "body", string(*o.Message), 256); err != nil {
		return err
	}

	return nil
}

/*PatchResourcesIDUnauthorizedBody patch resources ID unauthorized body
swagger:model PatchResourcesIDUnauthorizedBody
*/
type PatchResourcesIDUnauthorizedBody struct {

	// message
	// Required: true
	// Max Length: 256
	// Min Length: 3
	Message *string `json:"message"`
}

// Validate validates this patch resources ID unauthorized body
func (o *PatchResourcesIDUnauthorizedBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateMessage(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PatchResourcesIDUnauthorizedBody) validateMessage(formats strfmt.Registry) error {

	if err := validate.Required("patchResourcesIdUnauthorized"+"."+"message", "body", o.Message); err != nil {
		return err
	}

	if err := validate.MinLength("patchResourcesIdUnauthorized"+"."+"message", "body", string(*o.Message), 3); err != nil {
		return err
	}

	if err := validate.MaxLength("patchResourcesIdUnauthorized"+"."+"message", "body", string(*o.Message), 256); err != nil {
		return err
	}

	return nil
}
